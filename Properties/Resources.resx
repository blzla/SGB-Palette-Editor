<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="fallback" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        D6pgAAAAAElFTkSuQmCC
</value>
  </data>
</root>